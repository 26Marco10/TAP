services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "old-data:1:1,new-data:1:1" 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      DYNAMIC_CONFIG_ENABLED: true
    ports:
      - "8081:8081"
    restart: on-failure
    depends_on:
      - kafka

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    volumes:
      - ./Logstash/pipeline.conf:/usr/share/logstash/pipeline/pipeline.conf
      - ./Logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    ports:
      - "5959:5959"
    expose:
      - "5959"
    restart: on-failure
    depends_on:
      - kafka
  
  spark:
    build: ./Spark
    container_name: spark
    depends_on:
      - kafka
      - logstash
      - elastic
    restart: on-failure
      
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elastic
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    expose:
      - "9200"
    mem_limit: 1g
    restart: on-failure